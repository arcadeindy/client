<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:my="clr-namespace:CoinPoker.Client.Controls.UIControls"
    mc:Ignorable="d">


    <DataTemplate x:Key="NormalGameNameTemplate">
        <Border>
            <StackPanel Orientation="Horizontal">
                <!-- szybki stol -->
                <!--
                <TextBlock Margin="5,0,0,0" Text="&#xf1d8;" Foreground="YellowGreen" Style="{StaticResource FontAwesome}" VerticalAlignment="Center"/>
                -->
                <TextBlock Margin="5,0,0,0" Text="{Binding Name}" VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="UserCellTemplate">
        <Border>
            <StackPanel Orientation="Horizontal">
                <Grid Width="16" Height="16">
                    <Image Source="/Unity.Assets;component/Assets/UI/picture-no-pic-avatar.png" Width="16" Height="16" VerticalAlignment="Center"/>
                    <Image Source="{Binding User.Avatar}" Width="16" Height="16" VerticalAlignment="Center"/>
                </Grid>
                <TextBlock Margin="5,0,0,0" Text="{Binding User.Username}" FontWeight="SemiBold" VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    
    <ControlTemplate x:Key="ErrorTemplateSilverlightStyle">
        <StackPanel Orientation="Horizontal">
            <!-- Defines TextBox outline border and the ToolTipCorner -->
            <Border x:Name="border" BorderThickness="1.25"
                              BorderBrush="#FFDC000C">
                <Grid>
                    <Polygon x:Name="toolTipCorner"
                   Grid.ZIndex="2"
                   Margin="-1"
                   Points="9,9 9,0 0,0"
                   Fill="#FFDC000C"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   IsHitTestVisible="True"/>
                    <Polyline Grid.ZIndex="3"
                    Points="10,10 0,0"
                    Margin="-1"
                    HorizontalAlignment="Right"
                    StrokeThickness="1.5"
                    StrokeEndLineCap="Round"
                    StrokeStartLineCap="Round"
                    Stroke="White"
                    VerticalAlignment="Top"
                    IsHitTestVisible="True"/>
                    <AdornedElementPlaceholder x:Name="adorner"/>
                </Grid>
            </Border>
            <!-- Defines the Popup -->
            <Popup x:Name="placard"
             AllowsTransparency="True"
             PopupAnimation="Fade"
             Placement="Top"
             PlacementTarget="{Binding ElementName=toolTipCorner}"
             PlacementRectangle="10,-1,0,0">
                <!-- Used to reposition Popup when dialog moves or resizes -->
                <i:Interaction.Behaviors>
                    <my:RepositionPopupBehavior/>
                </i:Interaction.Behaviors>
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}">
                        <Style.Triggers>
                            <!-- Shows Popup when TextBox has focus -->
                            <DataTrigger Binding="{Binding ElementName=adorner, Path=AdornedElement.IsFocused}"
                           Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Shows Popup when mouse hovers over ToolTipCorner -->
                            <DataTrigger Binding="{Binding ElementName=toolTipCorner, Path=IsMouseOver}"
                           Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Hides Popup when window is no longer active -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
                           Value="False">
                                <Setter Property="IsOpen" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Popup.Style>
                <Border x:Name="errorBorder"
                Background="#FFDC000C"
                Margin="0,0,8,8"
                Opacity="1"
                CornerRadius="4"
                IsHitTestVisible="False"
                MinHeight="24"
                MaxWidth="267">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="4"
                              Color="Black"
                              Opacity="0.6"
                              Direction="315"
                              BlurRadius="4"/>
                    </Border.Effect>
                    <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
                     Foreground="White"
                     Margin="8,3,8,3"
                     TextWrapping="Wrap"/>
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>

    <!-- elementy listy glowne lobby -->
    <Style x:Key="UnityItemTable" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="2">
                            <Grid>
                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Canvas Visibility="Hidden" Width="50" Height="50" Panel.ZIndex="10" HorizontalAlignment="Right">
                                    <Canvas Canvas.Left="150" Panel.ZIndex="10" Name="ArrowTableList">
                                        <Path Fill="#222" Panel.ZIndex="10" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                            <Path.Data>
                                                <PathGeometry Figures="m 0.53570699 1.2907519 0 18.3928561 7.72939461 -9.376256 z" FillRule="evenodd"/>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Canvas>
                            </Grid>
                        </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#eee" />
                            <Setter Property="Foreground" Value="#000" />
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#fff"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#ddd"></Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <!--<Condition Property="Selector.IsSelectionActive" Value="True" />-->
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#222"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65"/>
                            <Setter Property="Foreground" Value="#fff"/>
                            <Setter Property="Visibility" TargetName="ArrowTableList" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView" x:Key="UnityMainLobby">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="0" Background="#eee" CornerRadius="3">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Margin="2">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- listview -->
    <Style TargetType="ListView" x:Key="UnityListViewDisableHorizontalScroll" >
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="0" CornerRadius="3">
                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" Margin="1" Style="{DynamicResource AppleStyleScrollBarStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- listview -->
    <Style TargetType="ListView" x:Key="UnityListView" >
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="0" CornerRadius="3">
                        <ScrollViewer Margin="1" Style="{DynamicResource AppleStyleScrollBarStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>