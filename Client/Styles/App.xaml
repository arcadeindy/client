<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!-- Font awesome icons -->
    <Style x:Key="FontAwesome">
        <Setter Property="TextElement.FontFamily" 
            Value="/Unity.Assets;component/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" />
    </Style>

    <Style x:Key="FontAwesomeWithover" TargetType="TextBlock">
        <Setter Property="TextElement.FontFamily" 
            Value="/Unity.Assets;component/Assets/Fonts/fontawesome-webfont.ttf#FontAwesome" />
 
                <Style.Triggers>
                    <Trigger Property ="IsMouseOver" Value="True">
                        <Setter Property= "Foreground" Value="{StaticResource ControlBackgroundNormalGreen}"/>
                    </Trigger>
                </Style.Triggers>
    </Style>
    
    <FontFamily x:Key="FontAwesomeFont">Assets/Fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>
    
    <Style x:Key="FontBlissfulThinking">
        <Setter Property="TextElement.FontFamily" 
            Value="/Unity.Assets;component/Assets/Fonts/BlissfulThinking.otf#Blissful Thinking" />
    </Style>
    <Style x:Key="MenuIcon">
        <Setter Property="TextElement.FontFamily" 
            Value="/Unity.Assets;component/Assets/Fonts/#FontAwesome" />
        <Setter Property="TextElement.Foreground" Value="Gray"/>
        <Setter Property="TextElement.FontSize" Value="15"/>
    </Style>
    <!-- Przyciski glowne lobby buttongroup -->
    <!-- Typy stolow -->

    


    <!-- styl tabulatora lobby glownego -->
    <Style x:Name="MainLobbyStyle" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TabPanel x:Name="HeaderPanel"
                    Grid.Row="0"
                    Panel.ZIndex="1"
                    Margin="0,0,4,-1"
                    IsItemsHost="True"
                    KeyboardNavigation.TabIndex="1"
                    Background="Transparent" />
                        <Border x:Name="Border"
                  Grid.Row="1"
                  BorderThickness="1"
                  CornerRadius="2"
                  KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ContentAreaColorLight}"
                              Offset="0" />
                                    <GradientStop Color="{DynamicResource ContentAreaColorDark}"
                              Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}"/>
                            </Border.BorderBrush>
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="4"
                              ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="MainLobbyStyleItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                    Storyboard.TargetName="Border">
                                            <EasingThicknessKeyFrame KeyTime="0"
                                             Value="1,1,1,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                  Margin="0,0,-4,0"
                  BorderThickness="1,1,1,1"
                  CornerRadius="2,12,0,0">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <Border.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                   Value="True">
                            <Setter Property="Panel.ZIndex"
                    Value="100" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tablea glowna ze stolami -->
    <DataTemplate x:Key="AgeItemTemplate">
        <Border BorderThickness="0,0,0,0" BorderBrush="#6FBDE8">
            <TextBlock Margin="2" Text="{Binding Age}" VerticalAlignment="Left" Grid.Column="1" />
        </Border>
    </DataTemplate>



    <DataTemplate x:Key="CountryItemTemplate">
        <Image Source="/Unity.Assets;component/Assets/UI/flags/China.png" Width="24" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </DataTemplate>
    
    <Style x:Key="GridViewColumnHeaderGripper" 
         TargetType="Thumb">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Background" Value="{DynamicResource ColorAccentSolidBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" 
                          Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" 
                                 Width="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#0000" Offset="0" />
                                    <GradientStop Color="#3000" Offset="0.3" />
                                    <GradientStop Color="#3000" Offset="0.7" />
                                    <GradientStop Color="#0000" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainLobbyColumnHeader"  TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
              TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                             BorderThickness="0"
                             CornerRadius="3"
                             Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
                              Margin="0,0,0,1"
                              VerticalAlignment="{TemplateBinding 
                              VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding 
                              HorizontalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels= "{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                          HorizontalAlignment="Right"
                          Margin="0,0,-9,0"
                          Padding="4,0,4,0"
                          Style="{StaticResource GridViewColumnHeaderGripper}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" 
                            Property="Background" Value="{StaticResource ControlBackgroundOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="MainLobbyHeaderTemplate">
        <TextBlock FontSize="12" Foreground="#444" Text="{Binding}" Margin="8,0,16,0"/>

        <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="TextBlock.Foreground" Value="#fff"/>
                </Trigger>
            </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="MenuTextButton">
        <TextBlock FontSize="12" Foreground="#222" Text="{Binding}"/>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="TextBlock.Foreground" Value="#000"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <!-- Kolumny + scroll + elementy gridviewheaderrowpresender i scrollcontentpresenter -->
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" Background="{DynamicResource ControlBackgroundNormal}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2" Columns="{Binding Path=TemplatedParent.View.Columns,
                                RelativeSource={RelativeSource TemplatedParent}}" 
                                ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                CanContentScroll="True" CanHorizontallyScroll="False"
                                CanVerticallyScroll="False"/>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Value="{TemplateBinding HorizontalOffset}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{DynamicResource HorizontalScrollStyle}"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Value="{TemplateBinding VerticalOffset}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Style="{DynamicResource AppleStyleVerticalScrollBarStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Brushes for colours/backgrounds -->
    <SolidColorBrush x:Key="HoverGroupButton" Color="#BCD742"/>

    <!-- popup menu -->
    <ControlTemplate x:Key="PopupTemplate">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid Width="150" Height="100" Margin="5 10 0 0">
                <Rectangle Stroke="Black" Fill="Yellow" RadiusX="6" RadiusY="6" Margin="0 20 0 0"/>
                <Path Stroke="Black" Fill="Yellow" Data="M 25 20 L 20 0 33 20" Margin="0 1 0 0"/>
                <TextBlock Text="What are you doing?" Margin="5 25 0 0"/>
                <TextBox Margin="5 45 5 0" VerticalAlignment="Top"/>
                <Button Content="Tweet" Margin="5" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- menu główne lewe, główne lobby -->
    <SolidColorBrush x:Key="MenuLobbyLeftSeparator" Color="#D55B43"/>

    <Style x:Key="MenuLobbyLeft" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#D22000"/>
        <Setter Property="CornerRadius" Value="4"/>
    </Style>

    <Style x:Key="MenuLobbyInnerLeft" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#222"/>
    </Style>

    <Style x:Key="MenuLobbyExpanderLeft" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Resources>
            <Storyboard x:Key="sbCollapse"  >
                <DoubleAnimation Storyboard.TargetName="gr3"
                                             From="1" 
                                             To="0" 
                                             Duration="0:0:0.5" 
                                             Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"/>
            </Storyboard>
            <Storyboard x:Key="sbExpand" >
                <DoubleAnimation  Storyboard.TargetName="gr3"
                                             From="0" 
                                             To="1" 
                                             Duration="0:0:0.5" 
                                             Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)"/>
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- Left Button Template -->
    <ControlTemplate x:Key="ToggleButtonLeft" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border"
                Background="{StaticResource ControlBackgroundNormal}"
                BorderBrush="{StaticResource ControlBorderBrush}"
                BorderThickness="1,1,0,1"
                TextBlock.Foreground="{StaticResource ControlForeground}"
                CornerRadius="3,0,0,3">
            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="5"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontSize="15"
                    TextBlock.Foreground="{StaticResource ControlForeground}">
                <ContentPresenter.Effect>
                    <DropShadowEffect Color="{StaticResource ColorForegroundShadowColor}" Direction="-90"
                                        BlurRadius="1" ShadowDepth="1" Opacity="0.5" />
                </ContentPresenter.Effect>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundOver}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Middle Button(s) Template -->
    <ControlTemplate x:Key="ToggleButtonMid" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border"
                Background="{StaticResource ControlBackgroundNormal}"
                BorderBrush="{StaticResource ControlBorderBrush}"
                BorderThickness="0,1,0,1"
                CornerRadius="0">
            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="5"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontSize="15"
                    TextBlock.Foreground="{StaticResource ControlForeground}">
                <ContentPresenter.Effect>
                    <DropShadowEffect Color="{StaticResource ColorForegroundShadowColor}" Direction="-90"
                                        BlurRadius="1" ShadowDepth="1" Opacity="0.5" />
                </ContentPresenter.Effect>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundOver}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <!-- Other code identical to Left Button Template -->
    </ControlTemplate>
    <!-- Right Button Template -->
    <ControlTemplate x:Key="ToggleButtonRight" TargetType="{x:Type ToggleButton}">
        <Border
                Name="Border"
                Background="{StaticResource ControlBackgroundNormal}"
                BorderBrush="{StaticResource ControlBorderBrush}"
                BorderThickness="0,1,1,1"
                CornerRadius="0, 3, 3, 0">

            <ContentPresenter
                    HorizontalAlignment="Center"
                    Margin="5"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextBlock.FontSize="15"
                    TextBlock.Foreground="{StaticResource ControlForeground}">
                <ContentPresenter.Effect>
                    <DropShadowEffect Color="{StaticResource ColorForegroundShadowColor}" Direction="-90"
                                        BlurRadius="1" ShadowDepth="1" Opacity="0.5" />
                </ContentPresenter.Effect>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundOver}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ControlBackgroundPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <!-- Other code identical to Left Button Template -->
    </ControlTemplate>

    <!-- PRzyciski akcji zamkniecie/minimalizacja/maksymalizacja -->
    <Style x:Key="ActionWindowItem" TargetType="TextBlock">
        <Setter Property="TextElement.FontFamily" 
            Value="/Unity.Assets;component/Assets/Fonts/#FontAwesome" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#D22000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ActionWindowItemStack" TargetType="StackPanel">
        <Setter Property="TextElement.FontFamily" 
            Value="Assets/Fonts/#FontAwesome" />
        <Setter Property="TextBlock.Foreground" Value="White"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="TextBlock.IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="#D22000"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>